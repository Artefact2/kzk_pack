kzkpack - create, alter and unpack KZK packs.

Usage
=====

kzkpack <command> <pack_name> <arguments>...

Where <command> is a valid command listed in the Commands section. The
arguments depend on the chosen command.

Commands
========

- create <pack_name> <file1> <file2> ...
  
  Create a new pack in <pack_name>. The new pack will contain every
  file given as additional arguments.

  If there is no specified files, or if the specified files is "-",
  read a list of files from the standard input (newline-separated).

  The given file names as arguments will also be used as file names in
  the pack. So, they must not have a trailing "/", and you should
  avoid paths that use "..", ".", or directory symlinks. While these
  are legal filenames, they WILL cause trouble when unpacking.

- append <pack_name> <file1> <file2> ...

  Append files to an existing pack. Same usage as the "create" command.

- unpack <pack_name> [<file1> <file2> ...]

  Unpack the specified file(s) of the given pack in the current
  directory. This operation can be dangerous if some file names from
  the archive contain references to "..", or rely on symbolic links
  etc. Use at your own risk!

  If no file names are given, all the files in the pack are unpacked.

- cat <pack_name> <file>

  Get the contents of the specified file from the given pack, and dump
  it to standard output.

- ls <pack_name>

  Print a list of file names (and their size, in bytes) from the
  archive to the stardard output.

- checksums <pack_name>

  Print a list of file names (and their SHA-1 checksum) to the
  stardard output.

  The generated output can be redirected to a file and be used with
  "sha1sum -c" to check the integrity of the unpacked files.

- integrity-check <pack_name>

  Check the integrity of the TOC and the archived files in the
  specified pack.

  The exit code is 0 if the check is OK, or non-zero if some integrity
  failed.

Examples
========

- Create a pack that contains all the files from the current
  directory:

  find * -type f | kzkpack create ~/pack.pack

  Note 1: you may be tempted to use `find .`, but in that case you
  will have to remove the "./" prefix of every file name. Unless it
  doesn't bother you and you don't forget it when reading files from
  the pack.

  Note 2: the "-type f" is optional, if you don't mind having a
  warning message generated for every skipped directory and other
  special files (like sockets, devices, symlinks etc.).

  Note 3: this is the preffered method when you are adding a
  ridiculously large number of files.

- Extract a file from the pack, but with a different filename:

  kzkpack cat pack.pack PackFilename > NewFilename

- Remove some files from the pack: since there is no command to do
  this, you will have to extract the pack in an empty directory,
  remove the files you want, and recreate the pack.

  mkdir -p /tmp/temporary_directory
  cd /tmp/temporary_directory
  kzkpack unpack ~/pack.pack
  rm file1 file2 file3 ...
  find * -type f | kzkpack create ~/new_pack.pack 
  mv ~/new_pack.pack ~/pack.pack

  Note: if you have fancy prefixes, or special file names, you will
  have to improvise a bit!

- Check the integrity of the packed files by comparing them to the
  files in the current directory:

  kzkpack checksums pack.pack | sha1sums -c -

- Play a packed video file without extracting it:

  kzkpack cat pack.pack movie.mkv | mplayer -

  Note: not all formats support being played back from a stream. Also,
  the stream will probably not be seekable.
